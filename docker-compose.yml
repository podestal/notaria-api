version: '3.8'

services:
  app:
    build: .
    container_name: php_app
    restart: always
    expose:
      - "9000"
    volumes:
      - .:/var/www
    depends_on:
      - db
    environment:
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}

  db:
    image: mysql:5.7
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: notarios
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      # - ./backup.sql:/docker-entrypoint-initdb.d/backup.sql

  nginx:
    container_name: nginx_server
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    restart: always
    ports:
      - "8003:80"
      - 443:443
    volumes:
      - .:/var/www
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/certbot:/var/www/certbot
    image: nginx:latest
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
    entrypoint: >+
      sh -c 'if [ -f "/etc/nginx/conf.d/nginx-${ENVIRONMENT}.conf" ]; then
              cp /etc/nginx/conf.d/nginx-${ENVIRONMENT}.conf /etc/nginx/nginx.conf;
             else
              echo "Error: /etc/nginx/conf.d/nginx-${ENVIRONMENT}.conf not found!";
              exit 1;
             fi &&
             nginx -g "daemon off;"'
    depends_on:
      - app

volumes:
  mysql_data:
